---

sonos_say:
  alias: >-
    Sonos text to speach (TTS) on all speakers. Will play a chime before the
    TTS recording.
  mode: queued
  variables:
    base_url: !secret internal_url
  sequence:
    - service: sonos.snapshot
      data_template:
        entity_id: group.sonos_all
    - service: media_player.volume_set
      data_template:
        entity_id: group.sonos_all
        volume_level: "0.3"
    - service: media_player.play_media
      data_template:
        entity_id: group.sonos_all
        media_content_id: "{{ base_url }}/local/audio/chime01.mp3"
        media_content_type: music
    - delay:
        seconds: 3
    - service: tts.google_translate_say
      data_template:
        entity_id: group.sonos_all
        message: "{{ message }}"
    - delay: "{{ delay }}"
    - service: media_player.media_stop
      target:
        entity_id: group.sonos_all
    - service: sonos.restore
      data_template:
        entity_id: group.sonos_all

sonos_play_file:
  alias: >-
    Sonos play file. Plays across all Sonos speakers unless it's during
    business hours on a weekday then the office speaker will be omitted.
  mode: queued
  variables:
    base_url: !secret internal_url
    sonos_group: >-
      {% if now().weekday() < 5 and 8 < now().hour < 17 %}
        group.sonos_all_but_office
      {% else %}
        group.sonos_all
      {% endif %}
    #sonos_group: "group.sonos_all_except_office"
  sequence:
    - service: sonos.snapshot
      data:
        entity_id: "{{ sonos_group }}"
    - service: media_player.volume_set
      data:
        entity_id: "{{ sonos_group }}"
        volume_level: "0.3"
    - service: media_player.play_media
      data:
        entity_id: "{{ sonos_group }}"
        media_content_id: "{{ base_url }}/local/{{ audio_url }}"
        media_content_type: music
    - delay: "{{ delay }}"
    - service: sonos.restore
      data:
        entity_id: "{{ sonos_group }}"

